import * as THREE from "three";
import { OrbitControls } from "jsm/controls/OrbitControls.js";
import { OBJLoader } from "jsm/loaders/OBJLoader.js"; // ‚úÖ –¥–ª—è skeleton.obj

// --- –°—Ü–µ–Ω–∞, –∫–∞–º–µ—Ä–∞, —Ä–µ–Ω–¥–µ—Ä ---
const w = window.innerWidth;
const h = window.innerHeight;
const scene = new THREE.Scene();
scene.background = new THREE.Color(0x000000);

const camera = new THREE.PerspectiveCamera(75, w / h, 0.1, 1000);
camera.position.set(0, 1, 3); // —Å—Ç–∞—Ä—Ç–æ–≤–∞ –ø–æ–∑–∏—Ü—ñ—è

const renderer = new THREE.WebGLRenderer();
renderer.setSize(w, h);
document.body.appendChild(renderer.domElement);

const ctrls = new OrbitControls(camera, renderer.domElement);
ctrls.enableDamping = true;

// --- –¶—ñ–ª—å–æ–≤—ñ –ø–æ–∑–∏—Ü—ñ—ó ---
let targetPos = new THREE.Vector3().copy(camera.position); // –∫—É–¥–∏ —Ä—É—Ö–∞—î—Ç—å—Å—è –∫–∞–º–µ—Ä–∞
let targetLook = new THREE.Vector3(0, 0.5, 0);             // –∫—É–¥–∏ –¥–∏–≤–∏—Ç—å—Å—è –∫–∞–º–µ—Ä–∞

// --- –ö–Ω–æ–ø–∫–∏ ---
document.getElementById("button_right").onclick = () => {
  targetPos.set(2, 0.5, 1.6); // –ø—Ä–∞–≤–∞
  targetLook.set(0, 0.5, 0);  // –¥–∏–≤–∏–º–æ—Å—å –Ω–∞ —Ç—É–ª—É–±
};
document.getElementById("button_left").onclick = () => {
  targetPos.set(-2, 0.9, -1.6); // –ª—ñ–≤–∞
  targetLook.set(0, 0.5, 0);    // –¥–∏–≤–∏–º–æ—Å—å –Ω–∞ —Ç—É–ª—É–±
};
document.getElementById("button_head").onclick = () => {
  targetPos.set(1, 1.5, 0.2);   // –ø–æ–∑–∏—Ü—ñ—è –∫–∞–º–µ—Ä–∏
  targetLook.set(0, 10, 2);    // üîπ –¥–∏–≤–∏–º–æ—Å—å –Ω–∞ –≥–æ–ª–æ–≤—É
};
document.getElementById("button_legs").onclick = () => {
  targetPos.set(0, 0, 3);       // –ø–æ–∑–∏—Ü—ñ—è
  targetLook.set(0, 0, 0);      // –¥–∏–≤–∏–º–æ—Å—å –Ω–∞ –Ω–æ–≥–∏
};

// --- –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è skeleton.obj ---
const objLoader = new OBJLoader();
objLoader.load("./assets/skeleton.obj", (object) => {
  object.scale.set(0.05, 0.05, 0.05);   // –ø—ñ–¥–≥–∞–Ω—è—î–º–æ –ø—ñ–¥ —Å—Ü–µ–Ω—É
  object.position.set(0, 0, 0);         // —Å—Ç–∞–≤–∏–º–æ –≤ —Ü–µ–Ω—Ç—Ä
  scene.add(object);
});

// --- –û—Å–≤—ñ—Ç–ª–µ–Ω–Ω—è ---
const hemiLight = new THREE.HemisphereLight(0xffffff, 0x444444);
scene.add(hemiLight);

const dirLight = new THREE.DirectionalLight(0xffffff, 1);
dirLight.position.set(5, 10, 7.5);
scene.add(dirLight);

// --- –§–æ–Ω ---


// --- –†–µ–Ω–¥–µ—Ä ---
function animate() {
  requestAnimationFrame(animate);

  // üîπ –ü–ª–∞–≤–Ω–∏–π —Ä—É—Ö –∫–∞–º–µ—Ä–∏
  camera.position.lerp(targetPos, 0.05);

  // üîπ –ü–ª–∞–≤–Ω–∏–π –ø–æ–≤–æ—Ä–æ—Ç –∫–∞–º–µ—Ä–∏
  let currentLook = new THREE.Vector3();
  currentLook.lerpVectors(
    camera.getWorldDirection(new THREE.Vector3()).add(camera.position),
    targetLook,
    0.05
  );
  camera.lookAt(currentLook);

  renderer.render(scene, camera);
  ctrls.update();
}
animate();

// --- –†–µ—Å–∞–π–∑ ---
window.addEventListener("resize", () => {
  camera.aspect = window.innerWidth / window.innerHeight;
  camera.updateProjectionMatrix();
  renderer.setSize(window.innerWidth, window.innerHeight);
});





document.addEventListener("DOMContentLoaded", () => {
  const info = {
    Otsaluu: `<h2>Otsaluu</h2><p>Otsaluu on pariton luu, joka muodostaa osan kalloa. Otsaluu koostuu kuudesta osasta. Sen t√§rkein teht√§v√§ on suojella otsalohkoja.‚Äã</p>`,
    P√§√§laenluu: `<h2>P√§√§laenluu</h2><p>P√§√§laenluut (lat. os parietale) ovat kaksi luuta kallossa, jotka muodostavat p√§√§kallon sivut ja katon. Molemmat luut ovat noin nelikulmion muotoisia.‚Äã‚Äã</p>`,
    Ohimoluu: `<h2>Ohimoluu</h2><p>Ohimoluu (lat. os temporale) kuuluu kallon luihin, ja se sijaitsee kallon sivuilla sulkien sis√§√§ns√§ korvak√§yt√§v√§n, v√§likorvan ja sis√§korvan. Ohimoluu muodostuu 
    kolmesta toisiinsa liittyneest√§ osasta: pars squamosa, ohimoluun kallio-osa (pars petrosa) ja pars tympanica. Pars squamosan uloke, processus zygomaticus, kiinnittyy otsaluun samannimiseen 
    rakenteeseen muodostaen silm√§n ymp√§rille silm√§kaaren, arcus zygomaticuksen. Lis√§ksi siin√§ on nivelpinta alaleuan luuta varten. V√§likorva ja sis√§korva sijaitsevat pars petrosan onteloiden sis√§ll√§.
     Korvak√§yt√§v√§√§ puolestaan ymp√§r√∂i pars tympanica. Ohimoluu on parillinen luu eli niit√§ on kaksi, vasen ja oikea.‚Äã‚Äã</p>`,
    Takaraivoluu: `<h2>Takaraivoluu</h2><p>(lat. os occipitale) kuuluu kallon luihin (ossa cranii) ja se koostuu kolmesta yhteen liittyneest√§ osasta. Pars basilaris sijaitsee alimmaisena ja sen 
    alaosassa on atlaksen kanssa artikuloiva condylus occipitalis. Pars lateralis sijaitsee pars basilariksen molemminpuolin ja siin√§ oleva uloke, processus paracondylaris, toimii p√§√§n lihasten
     kiinnittymiskohtana. Squama occipitalis sijaitsee ylimp√§n√§ takaraivoluussa ja sen yl√§osassa on palpoitavissa oleva kyhmy, crista nuchae. Kaikki kolme takaraivoluun osaa osallistuvat 
     niska-aukon (foramen magnum) muodostamiseen.‚Äã‚Äã</p>`,
    Yl√§leukaluu: `<h2>Yl√§leukaluu</h2><p>Yl√§leuka (lat. maxilla) koostuu kahdesta, vasemmasta ja oikeasta, yl√§leuanluusta (lat. os maxillaris). Yl√§hampaat ovat kiinni yl√§leukaluissa. 
    Suurimmat nen√§n sivuonteloista, vasen ja oikea poskiontelo (lat. sinus maxillaris), sijaitsevat yl√§leukaluissa.Yl√§leuka j√§√§ usein nykyisin pienemm√§ksi pehme√§mm√§n ravinnon vuoksi, ja
     syntyy purentavirheit√§. Toinen syy yl√§leuan pieneksi j√§√§miseen voi olla hengitt√§minen suun kautta. Kitarisojen poisto voi auttaa nen√§hengityst√§ ja n√§in edist√§√§ yl√§leuan kasvua.‚Äã</p>`,
    Alaleukaluu: `<h2>Alaleukaluu</h2><p>Alaleuanluu (mandibula) on selk√§j√§nteisten luu, johon alahampaat ovat kiinnittyneet. Rungon takaa suuntautuvat yl√∂sp√§in alaleukaluun haarat. Vasen ja oikea yl√§leuanluu sijaitsevat alaleuanluuta vasten niveltym√§tt√§ siihen. Ihmisell√§ alaleuan k√§rjess√§ on leukakyhmy. Alaleuanluu niveltyy korvak√§yt√§vien l√§hell√§ ohimoluihin. Kyseiset leukanivelet liikkuvat suuta aukoessa.‚Äã</p>`,
    Kaulanikama: `<h2>Kaulanikama</h2><p>  Nikama (vertebra) on ep√§s√§√§nn√∂llisen muotoinen moniulokkeinen luu, joista selk√§ranka muodostuu. Nikaman osia ovat nikamasolmu, nikamakaari ja nikamaulokkeet. Nikaman sis√§ll√§ kulkee selk√§ydinkanava. Nikamat sijaitsevat p√§√§llekk√§in ja niveltyv√§t toisiinsa, mik√§ tekee selk√§rangasta taipuvan.‚Äã</p>`,
    Rintanikama: `<h2>Rintanikama</h2><p></p>`,
    Lanneranka: `<h2>Lanneranka</h2><p></p>`,
    Ristiluu: `<h2>Ristiluu</h2><p></p>`,
    Rintalasta: `<h2>Rintalasta</h2><p></p>`,
    Kylkiluu: `<h2>Kylkiluu</h2><p></p>`,
    Solisluu: `<h2>Solisluu</h2><p></p>`,
    Lapaluu: `<h2>Lapaluu</h2><p></p>`,
    Olkaluu: `<h2>Olkaluu</h2><p></p>`,
    Varttinaluu: `<h2>V√§rttin√§luu</h2><p></p>`,
    Kyyarnluu: `<h2>Kyyn√§rluu</h2><p></p>`,
    Sormien: `<h2>Sormien luut</h2><p></p>`,
    Lantion: `<h2>Lantion luu</h2><p></p>`,
    Reisiluu: `<h2>Reisiluu</h2><p></p>`,
    Polviluu: `<h2>Polviluu</h2><p></p>`,
    Saariluu: `<h2>S√§√§riluu</h2><p></p>`,
    Pohjeluu: `<h2>Pohjeluu</h2><p></p>`,
    Jalkateran: `<h2>Jalkater√§n luu</h2><p></p>`
  };
  
  const btn_close = document.getElementById("btn_close");
  if (btn_close){
    btn_close.onclick = () => {
      document.getElementById("info_panel").style.display = "none";  
    } 
  }
  for (const id in info) {
    const btn = document.getElementById(id);
    if (btn) {  // –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞, —â–æ–± —É–Ω–∏–∫–Ω—É—Ç–∏ –ø–æ–º–∏–ª–æ–∫
      btn.onclick = () => {
        document.getElementById("info_panel").style.display = "block";  
        document.getElementById("text").innerHTML = info[id];
      } 

    }
  }
});